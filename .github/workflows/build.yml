name: Manual Angular Build and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment (test/prod)'
        required: true
        type: choice
        options:
          - test
          - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install

    - name: Set API Key
      run: echo "API_KEY=${{ secrets[format('{0}_API_KEY', github.event.inputs.environment)] }}" >> $GITHUB_ENV

    - name: Build Angular app
      run: npm run build -- --configuration=${{ github.event.inputs.environment }}
      env:
        API_KEY: ${{ secrets[format('{0}_API_KEY', github.event.inputs.environment)] }}

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets[format('{0}_EC2_HOST', github.event.inputs.environment)] }}
        EC2_USER: ${{ secrets[format('{0}_EC2_USER', github.event.inputs.environment)] }}
        EC2_SSH_KEY: ${{ secrets[format('{0}_EC2_SSH_KEY', github.event.inputs.environment)] }}
      run: |
        # Write the SSH key to a file
        echo "$EC2_SSH_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem

        ls -a
        cd dist
        ls -a
        tree
        cd ..
        
        # Copy the built files to EC2
        
        scp -o StrictHostKeyChecking=no -i deploy_key.pem -r dist/test-pipeline/browser/* $EC2_USER@$EC2_HOST:/var/www/html/
        
        # Set proper permissions
        ssh -o StrictHostKeyChecking=no -i deploy_key.pem $EC2_USER@$EC2_HOST '
          sudo chown -R www-data:www-data /var/www/html/
        '
        
        # Clean up the key file
        rm deploy_key.pem

    - name: Verify Deployment
      env:
        EC2_HOST: ${{ secrets[format('{0}_EC2_HOST', github.event.inputs.environment)] }}
      run: |
        echo "Deployment completed to ${{ github.event.inputs.environment }} environment"
        echo "You can verify the deployment at http://$EC2_HOST"